[gd_scene load_steps=13 format=2]

[ext_resource path="res://assets/fonts/PressStart2P.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://scenes/Button.tscn" type="PackedScene" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
//render_mode skip_vertex_transform;

uniform vec4 color1 = vec4(0.266,0.58,0.43,1);
uniform vec4 color2 = vec4(0.10,0.24,0.10,1);
uniform int pixel_size = 64;

uniform mat4 global_transform;
varying vec2 world_position;

void vertex(){
    world_position = (global_transform * vec4(VERTEX, 0.0, 1.0)).xy;
}

void fragment() {
//	world_position = (global_transform * vec4(VERTEX, 0.0, 1.0)).xy;
	int x = int(FRAGCOORD.x);
	int y = int(FRAGCOORD.y);
	
	if ((x/pixel_size + y/pixel_size) % 2 == 0) {
		COLOR = color1;
	} else {
		COLOR = color2;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color1 = Plane( 0.3, 0.1, 0.1, 1 )
shader_param/color2 = Plane( 0.2, 0.1, 0.1, 1 )
shader_param/pixel_size = 16
shader_param/global_transform = null

[sub_resource type="GDScript" id=3]
script/source = "extends Button

const PlayDialog = preload(\"res://scenes/PlayDialog.tscn\")

func _ready():
	if not OS.get_name() in [\"HTML5\", \"Android\", \"iOS\"]:
		self.grab_focus()
	else:
		self.focus_mode = FOCUS_NONE

func _pressed():
	FXPlayer.playjingle()
	for child in get_tree().root.get_children():
		if child.name == \"PlayDialog\":
			print(PlayDialog.resource_name)
			return
	get_tree().root.add_child(PlayDialog.instance())
	# get_tree().change_scene(\"res://scenes/GameScene.tscn\")
	pass
"

[sub_resource type="GDScript" id=4]
script/source = "extends Button

const ExitDialog = preload(\"res://scenes/ExitDialog.tscn\")

func _ready():
	if OS.get_name() in [\"HTML5\", \"Android\", \"iOS\"]:
		self.queue_free()

func _pressed():
	FXPlayer.playjingle()
	for child in get_tree().root.get_children():
		if child.name == \"ExitDialog\":
			print(ExitDialog.resource_name)
			return
	get_tree().root.add_child(ExitDialog.instance())
"

[sub_resource type="DynamicFont" id=5]
size = 64
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=6]
font_data = ExtResource( 1 )

[sub_resource type="GDScript" id=7]
script/source = "extends Label

func _ready():
	var version_number = str(ProjectSettings.get_setting(\"application/config/version\"))
	self.text = \"v\" + version_number + (\"\" if \".\" in version_number else \".0\")
"

[sub_resource type="GDScript" id=8]
script/source = "extends Label

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	var hiscore = Utils.load_hiscore()
	if hiscore == -1:
		hiscore = 0
	self.text = \"HISCORE: \" + str(hiscore)

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="DynamicFont" id=9]
size = 8
font_data = ExtResource( 1 )

[sub_resource type="GDScript" id=10]
script/source = "extends LinkButton

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func _pressed():
	OS.shell_open(\"https://marte.dev\")
"

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_horizontal_guides_": [  ],
"_edit_use_anchors_": false,
"_edit_vertical_guides_": [  ]
}

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -115.0
margin_top = -102.0
margin_right = 115.0
margin_bottom = 102.0
custom_constants/separation = 30
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PlayButton" parent="VBoxContainer" instance=ExtResource( 2 )]
margin_top = 22.0
margin_right = 230.0
margin_bottom = 87.0
rect_min_size = Vector2( 0, 65 )
focus_mode = 2
enabled_focus_mode = 2
script = SubResource( 3 )

[node name="QuitButton" parent="VBoxContainer" instance=ExtResource( 2 )]
margin_top = 117.0
margin_right = 230.0
margin_bottom = 182.0
rect_min_size = Vector2( 0, 65 )
focus_mode = 2
enabled_focus_mode = 2
text = "QUIT"
script = SubResource( 4 )

[node name="Label" type="Label" parent="."]
anchor_right = 1.0
anchor_bottom = 0.211
margin_top = -1.0
margin_right = -1.0
margin_bottom = 44.968
custom_fonts/font = SubResource( 5 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 0.396078 )
custom_constants/shadow_offset_x = 7
custom_constants/shadow_offset_y = 5
text = "TETRIS"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label2" type="Label" parent="."]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -100.0
margin_top = -42.0
margin_right = -16.0
custom_fonts/font = SubResource( 6 )
text = "v1.0"
align = 2
valign = 1
script = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HighScoreLabel" type="Label" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 20.0
margin_top = -42.0
margin_right = 180.0
custom_fonts/font = SubResource( 6 )
text = "HISCORE: 0"
valign = 1
script = SubResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label3" type="LinkButton" parent="."]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -90.0
margin_top = -45.0
margin_right = -18.0
margin_bottom = -37.0
grow_horizontal = 0
custom_fonts/font = SubResource( 9 )
custom_colors/font_color = Color( 1, 1, 1, 0.447059 )
text = "marte.dev"
underline = 1
script = SubResource( 10 )
__meta__ = {
"_edit_use_anchors_": false
}
